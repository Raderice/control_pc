{"ast":null,"code":"var _jsxFileName = \"/home/raderice/learn/projects/control_pc/control_pc/src/component-UI/keyboard.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sendKeyCommand = async key => {\n  try {\n    // Для спецклавиш отправляем label как есть, для букв/цифр — в нижнем регистре\n    const isAlphaNum = /^[a-zA-Z0-9]$/.test(key);\n    const sendKey = isAlphaNum ? key.toLowerCase() : key;\n    await fetch(`http://${window.location.hostname}:4000/key`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        key: sendKey\n      })\n    });\n  } catch (e) {\n    alert(\"Ошибка отправки команды на сервер\");\n  }\n};\nconst keyboardLayout = [\n// Первая строка\n[{\n  label: \"Esc\",\n  width: 1\n}, ...Array.from({\n  length: 12\n}, (_, i) => ({\n  label: `F${i + 1}`,\n  width: 1\n})), {\n  label: \"PrtSc\",\n  width: 1\n}, {\n  label: \"Scroll\",\n  width: 1\n}, {\n  label: \"Pause\",\n  width: 1\n}],\n// Вторая строка\n[{\n  label: \"`\",\n  width: 1\n}, ...Array.from({\n  length: 9\n}, (_, i) => ({\n  label: `${i + 1}`,\n  width: 1\n})), {\n  label: \"0\",\n  width: 1\n}, {\n  label: \"-\",\n  width: 1\n}, {\n  label: \"=\",\n  width: 1\n}, {\n  label: \"Backspace\",\n  width: 2\n}, {\n  label: \"Insert\",\n  width: 1\n}, {\n  label: \"Home\",\n  width: 1\n}, {\n  label: \"PgUp\",\n  width: 1\n}, {\n  label: \"NumLock\",\n  width: 1\n}, {\n  label: \"/\",\n  width: 1\n}, {\n  label: \"*\",\n  width: 1\n}, {\n  label: \"-\",\n  width: 1\n}],\n// Третья строка\n[{\n  label: \"Tab\",\n  width: 1.5\n}, ...[\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"], {\n  label: \"[\",\n  width: 1\n}, {\n  label: \"]\",\n  width: 1\n}, {\n  label: \"\\\\\",\n  width: 1.5\n}, {\n  label: \"Del\",\n  width: 1\n}, {\n  label: \"End\",\n  width: 1\n}, {\n  label: \"PgDn\",\n  width: 1\n}, {\n  label: \"7\",\n  width: 1\n}, {\n  label: \"8\",\n  width: 1\n}, {\n  label: \"9\",\n  width: 1\n}, {\n  label: \"+\",\n  width: 1,\n  height: 2\n}].map(k => typeof k === \"string\" ? {\n  label: k,\n  width: 1\n} : k),\n// Четвертая строка\n[{\n  label: \"CapsLock\",\n  width: 1.75\n}, ...[\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], {\n  label: \";\",\n  width: 1\n}, {\n  label: \"'\",\n  width: 1\n}, {\n  label: \"Enter\",\n  width: 2.25\n}, {\n  label: \"4\",\n  width: 1\n}, {\n  label: \"5\",\n  width: 1\n}, {\n  label: \"6\",\n  width: 1\n}].map(k => typeof k === \"string\" ? {\n  label: k,\n  width: 1\n} : k),\n// Пятая строка\n[{\n  label: \"Shift\",\n  width: 2.25\n}, ...[\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"], {\n  label: \",\",\n  width: 1\n}, {\n  label: \".\",\n  width: 1\n}, {\n  label: \"/\",\n  width: 1\n}, {\n  label: \"Shift\",\n  width: 2.75\n}, {\n  label: \"↑\",\n  width: 1\n}, {\n  label: \"1\",\n  width: 1\n}, {\n  label: \"2\",\n  width: 1\n}, {\n  label: \"3\",\n  width: 1\n}, {\n  label: \"Enter\",\n  width: 1,\n  height: 2\n}].map(k => typeof k === \"string\" ? {\n  label: k,\n  width: 1\n} : k),\n// Шестая строка\n[{\n  label: \"Ctrl\",\n  width: 1.25\n}, {\n  label: \"Win\",\n  width: 1.25\n}, {\n  label: \"Alt\",\n  width: 1.25\n}, {\n  label: \"Space\",\n  width: 6.25\n}, {\n  label: \"Alt\",\n  width: 1.25\n}, {\n  label: \"Win\",\n  width: 1.25\n}, {\n  label: \"Menu\",\n  width: 1.25\n}, {\n  label: \"Ctrl\",\n  width: 1.25\n}, {\n  label: \"←\",\n  width: 1\n}, {\n  label: \"↓\",\n  width: 1\n}, {\n  label: \"→\",\n  width: 1\n}, {\n  label: \"0\",\n  width: 2\n}, {\n  label: \".\",\n  width: 1\n}]];\nconst Keyboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: \"inline-block\",\n    background: \"#222\",\n    padding: 16,\n    borderRadius: 12\n  },\n  children: keyboardLayout.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: 4\n    },\n    children: row.map((key, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${key.width * 40}px`,\n        height: `${(key.height || 1) * 40}px`,\n        marginRight: 4,\n        background: \"#1976d2\",\n        color: \"#fff\",\n        borderRadius: 6,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: 16,\n        border: \"2px solid #1976d2\",\n        boxSizing: \"border-box\",\n        userSelect: \"none\",\n        cursor: \"pointer\",\n        transition: \"background 0.2s\"\n      },\n      onClick: () => sendKeyCommand(key.label),\n      children: key.label\n    }, j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this))\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 3\n}, this);\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","sendKeyCommand","key","isAlphaNum","test","sendKey","toLowerCase","fetch","window","location","hostname","method","headers","body","JSON","stringify","e","alert","keyboardLayout","label","width","Array","from","length","_","i","height","map","k","Keyboard","style","display","background","padding","borderRadius","children","row","marginBottom","j","marginRight","color","alignItems","justifyContent","fontSize","border","boxSizing","userSelect","cursor","transition","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raderice/learn/projects/control_pc/control_pc/src/component-UI/keyboard.jsx"],"sourcesContent":["import React from \"react\";\n\nconst sendKeyCommand = async (key) => {\n  try {\n    // Для спецклавиш отправляем label как есть, для букв/цифр — в нижнем регистре\n    const isAlphaNum = /^[a-zA-Z0-9]$/.test(key);\n    const sendKey = isAlphaNum ? key.toLowerCase() : key;\n    await fetch(`http://${window.location.hostname}:4000/key`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ key: sendKey }),\n    });\n  } catch (e) {\n    alert(\"Ошибка отправки команды на сервер\");\n  }\n};\n\nconst keyboardLayout = [\n  // Первая строка\n  [\n    { label: \"Esc\", width: 1 },\n    ...Array.from({ length: 12 }, (_, i) => ({ label: `F${i + 1}`, width: 1 })),\n    { label: \"PrtSc\", width: 1 },\n    { label: \"Scroll\", width: 1 },\n    { label: \"Pause\", width: 1 },\n  ],\n  // Вторая строка\n  [\n    { label: \"`\", width: 1 },\n    ...Array.from({ length: 9 }, (_, i) => ({ label: `${i + 1}`, width: 1 })),\n    { label: \"0\", width: 1 },\n    { label: \"-\", width: 1 },\n    { label: \"=\", width: 1 },\n    { label: \"Backspace\", width: 2 },\n    { label: \"Insert\", width: 1 },\n    { label: \"Home\", width: 1 },\n    { label: \"PgUp\", width: 1 },\n    { label: \"NumLock\", width: 1 },\n    { label: \"/\", width: 1 },\n    { label: \"*\", width: 1 },\n    { label: \"-\", width: 1 },\n  ],\n  // Третья строка\n  [\n    { label: \"Tab\", width: 1.5 },\n    ...[\"Q\",\"W\",\"E\",\"R\",\"T\",\"Y\",\"U\",\"I\",\"O\",\"P\"],\n    { label: \"[\", width: 1 },\n    { label: \"]\", width: 1 },\n    { label: \"\\\\\", width: 1.5 },\n    { label: \"Del\", width: 1 },\n    { label: \"End\", width: 1 },\n    { label: \"PgDn\", width: 1 },\n    { label: \"7\", width: 1 },\n    { label: \"8\", width: 1 },\n    { label: \"9\", width: 1 },\n    { label: \"+\", width: 1, height: 2 },\n  ].map(k => typeof k === \"string\" ? { label: k, width: 1 } : k),\n  // Четвертая строка\n  [\n    { label: \"CapsLock\", width: 1.75 },\n    ...[\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\"],\n    { label: \";\", width: 1 },\n    { label: \"'\", width: 1 },\n    { label: \"Enter\", width: 2.25 },\n    { label: \"4\", width: 1 },\n    { label: \"5\", width: 1 },\n    { label: \"6\", width: 1 },\n  ].map(k => typeof k === \"string\" ? { label: k, width: 1 } : k),\n  // Пятая строка\n  [\n    { label: \"Shift\", width: 2.25 },\n    ...[\"Z\",\"X\",\"C\",\"V\",\"B\",\"N\",\"M\"],\n    { label: \",\", width: 1 },\n    { label: \".\", width: 1 },\n    { label: \"/\", width: 1 },\n    { label: \"Shift\", width: 2.75 },\n    { label: \"↑\", width: 1 },\n    { label: \"1\", width: 1 },\n    { label: \"2\", width: 1 },\n    { label: \"3\", width: 1 },\n    { label: \"Enter\", width: 1, height: 2 },\n  ].map(k => typeof k === \"string\" ? { label: k, width: 1 } : k),\n  // Шестая строка\n  [\n    { label: \"Ctrl\", width: 1.25 },\n    { label: \"Win\", width: 1.25 },\n    { label: \"Alt\", width: 1.25 },\n    { label: \"Space\", width: 6.25 },\n    { label: \"Alt\", width: 1.25 },\n    { label: \"Win\", width: 1.25 },\n    { label: \"Menu\", width: 1.25 },\n    { label: \"Ctrl\", width: 1.25 },\n    { label: \"←\", width: 1 },\n    { label: \"↓\", width: 1 },\n    { label: \"→\", width: 1 },\n    { label: \"0\", width: 2 },\n    { label: \".\", width: 1 },\n  ],\n];\n\nconst Keyboard = () => (\n  <div style={{ display: \"inline-block\", background: \"#222\", padding: 16, borderRadius: 12 }}>\n    {keyboardLayout.map((row, i) => (\n      <div key={i} style={{ display: \"flex\", marginBottom: 4 }}>\n        {row.map((key, j) => (\n          <div\n            key={j}\n            style={{\n              width: `${key.width * 40}px`,\n              height: `${(key.height || 1) * 40}px`,\n              marginRight: 4,\n              background: \"#1976d2\",\n              color: \"#fff\",\n              borderRadius: 6,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              fontSize: 16,\n              border: \"2px solid #1976d2\",\n              boxSizing: \"border-box\",\n              userSelect: \"none\",\n              cursor: \"pointer\",\n              transition: \"background 0.2s\",\n            }}\n            onClick={() => sendKeyCommand(key.label)}\n          >\n            {key.label}\n          </div>\n        ))}\n      </div>\n    ))}\n  </div>\n);\n\nexport default Keyboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}