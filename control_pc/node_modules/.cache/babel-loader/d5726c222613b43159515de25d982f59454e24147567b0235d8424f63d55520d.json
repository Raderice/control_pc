{"ast":null,"code":"var _jsxFileName = \"/home/raderice/learn/projects/control_pc/control_pc/src/component-UI/InputSender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sendKeyCommand = async key => {\n  try {\n    await fetch(`http://${window.location.hostname}:4000/key`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        key\n      })\n    });\n  } catch (e) {\n    // Можно добавить обработку ошибок\n  }\n};\nconst InputSender = () => {\n  _s();\n  const prevValue = useRef(\"\");\n  const handleChange = e => {\n    const value = e.target.value;\n    // Определяем, что именно было введено (символ или удаление)\n    if (value.length > prevValue.current.length) {\n      // Введён новый символ\n      const newChar = value.slice(-1);\n      sendKeyCommand(newChar);\n    } else if (value.length < prevValue.current.length) {\n      // Удаление (Backspace)\n      sendKeyCommand(\"Backspace\");\n    }\n    prevValue.current = value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0438 \\u043D\\u0430 \\u041F\\u041A\",\n    onChange: handleChange,\n    style: {\n      width: \"100%\",\n      maxWidth: 400,\n      fontSize: 20,\n      padding: 8,\n      marginBottom: 24,\n      borderRadius: 8,\n      border: \"1px solid #1976d2\",\n      outline: \"none\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InputSender, \"Xm1ZRU0syTAZ/RER9EnkRgYzM9Q=\");\n_c = InputSender;\nexport default InputSender;\nvar _c;\n$RefreshReg$(_c, \"InputSender\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","sendKeyCommand","key","fetch","window","location","hostname","method","headers","body","JSON","stringify","e","InputSender","_s","prevValue","handleChange","value","target","length","current","newChar","slice","type","placeholder","onChange","style","width","maxWidth","fontSize","padding","marginBottom","borderRadius","border","outline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raderice/learn/projects/control_pc/control_pc/src/component-UI/InputSender.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nconst sendKeyCommand = async (key) => {\n  try {\n    await fetch(`http://${window.location.hostname}:4000/key`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ key }),\n    });\n  } catch (e) {\n    // Можно добавить обработку ошибок\n  }\n};\n\nconst InputSender = () => {\n  const prevValue = useRef(\"\");\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    // Определяем, что именно было введено (символ или удаление)\n    if (value.length > prevValue.current.length) {\n      // Введён новый символ\n      const newChar = value.slice(-1);\n      sendKeyCommand(newChar);\n    } else if (value.length < prevValue.current.length) {\n      // Удаление (Backspace)\n      sendKeyCommand(\"Backspace\");\n    }\n    prevValue.current = value;\n  };\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Введите текст для отправки на ПК\"\n      onChange={handleChange}\n      style={{\n        width: \"100%\",\n        maxWidth: 400,\n        fontSize: 20,\n        padding: 8,\n        marginBottom: 24,\n        borderRadius: 8,\n        border: \"1px solid #1976d2\",\n        outline: \"none\",\n      }}\n    />\n  );\n};\n\nexport default InputSender;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAG,MAAOC,GAAG,IAAK;EACpC,IAAI;IACF,MAAMC,KAAK,CAAC,UAAUC,MAAM,CAACC,QAAQ,CAACC,QAAQ,WAAW,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAI,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOU,CAAC,EAAE;IACV;EAAA;AAEJ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMkB,YAAY,GAAIJ,CAAC,IAAK;IAC1B,MAAMK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACD,KAAK;IAC5B;IACA,IAAIA,KAAK,CAACE,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACD,MAAM,EAAE;MAC3C;MACA,MAAME,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/BrB,cAAc,CAACoB,OAAO,CAAC;IACzB,CAAC,MAAM,IAAIJ,KAAK,CAACE,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACD,MAAM,EAAE;MAClD;MACAlB,cAAc,CAAC,WAAW,CAAC;IAC7B;IACAc,SAAS,CAACK,OAAO,GAAGH,KAAK;EAC3B,CAAC;EAED,oBACEjB,OAAA;IACEuB,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,yKAAkC;IAC9CC,QAAQ,EAAET,YAAa;IACvBU,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,GAAG;MACbC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,CAAC;MACVC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,CAAC;MACfC,MAAM,EAAE,mBAAmB;MAC3BC,OAAO,EAAE;IACX;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACxB,EAAA,CAlCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}